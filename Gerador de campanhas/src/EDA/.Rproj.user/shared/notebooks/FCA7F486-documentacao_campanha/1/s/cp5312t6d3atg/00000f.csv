"0",""
"0",""
"0",""
"0","# função para gerar gráfico"
"0","comparando_medias <- function(dados){"
"0",""
"0","  ordered_months <- c('sem_iphone', 'iphone')"
"0","  colnames(dados) <- c(""sample_id"", 'dados')"
"0","  toPlot <- data.frame("
"0","    "
"0","    sample_id = as.character(),"
"0","    mean = as.numeric(),"
"0","    lower = as.numeric(),"
"0","    upper = as.numeric(),"
"0","    stringsAsFactors = FALSE"
"0","  )"
"0",""
"0","  for (comercial in unique(dados$sample_id)) {"
"0","    "
"0","          amostra <- dados[dados$sample_id == comercial, ]"
"0","          "
"0","          # escrever funC'C#o para concatenar todas as amostrar"
"0","          media = mean(amostra$dados)"
"0","          desvio = sd(amostra$dados)"
"0","          erro_padrao_amostra = desvio / sqrt(nrow(amostra))"
"0","          #calculando limites inferior e superios"
"0","          lower <- round(media - 1.96 * erro_padrao_amostra, 2)"
"0","          upper <- round(media + 1.96 * erro_padrao_amostra, 2)"
"0","          toPlot <- rbind("
"0","            toPlot, data.frame("
"0","              sample_id = comercial,"
"0","              mean = media,"
"0","              lower = lower,"
"0","              upper = upper"
"0","            )"
"0","          )"
"0","          "
"0","      }  "
"0","  ggplot(toPlot, mapping = aes(x = as.factor(sample_id) %>% ordered(ordered_months), y = mean, colour = mean)) +"
"0","    geom_point(size = 2) +"
"0","    geom_errorbar(aes(ymin = lower, ymax = upper), width = .1, linewidth = 1.1) +"
"0","    theme_bw() +"
"0","    labs(x = "" "","
"0","         y = ""Média de contratos por parceiros"","
"0","         title = 'Comparação entre médias e variâncias',"
"0","         subtitle = 'campanha do iphone',"
"0","         caption = ""Fonte: BFF e campanha do iphone"") +"
"0","    theme(axis.text.x = element_text(angle = 45, hjust = 1),"
"0","          plot.title = element_text(colour = ""#0099F8"", size = 12, face = 'bold'),"
"0","          plot.subtitle = element_text(size = 10, face = 'bold'),"
"0","          plot.caption =  element_text(face = 'italic'),"
"0","          legend.position = 'none') +"
"0","    scale_x_discrete(labels = c('iphone'=""Com campanha"", 'sem_iphone'=""Sem campanha""))"
"0","  "
"0","}"
